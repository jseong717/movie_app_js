{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","slice","map","genre","index","key","App","state","isLoading","movies","getMovies","a","async","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sTAsCeA,MA/Bf,YACA,EADgBC,KACf,IADqBC,EACtB,EADsBA,MAAOC,EAC7B,EAD6BA,QAASC,EACtC,EADsCA,OAAQC,EAC9C,EAD8CA,OAE1C,OACY,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,gBAAgBC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IAC/D,yBAAKI,UAAU,gBAGX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeJ,GAC7B,uBAAGI,UAAU,kBAAkBH,EAAQM,MAAM,EAAG,KAAhD,OACA,wBAAIH,UAAU,iBACTD,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAON,UAAU,iBAA1B,OAA+CM,EAA/C,MAAyDD,UCwP1EG,G,iNA5DbC,MACA,CACEC,WAAY,EACZC,OAAS,I,EAGXC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAQAE,IAAMC,IAAI,6DARV,gBAMEL,EANF,EAIRM,KAEEA,KAAQN,OAGZ,EAAKO,SAAS,CAAEP,SAAQD,WAAY,IAT1B,sC,mFAmBVS,KAAKP,c,+BAIN,IAAD,EACgCO,KAAKV,MAA3BC,EADV,EACUA,UAAWC,EADrB,EACqBA,OAEnB,OACE,6BAASX,UAAU,aAChBU,EACC,yBAAKV,UAAY,UACf,0BAAMA,UAAY,gBAAlB,eAGF,yBAAKA,UAAY,UACdW,EAAOP,KAAI,SAAAgB,GAAK,OACf,kBAAC,EAAD,CACEb,IAAKa,EAAMC,GACXA,GAAID,EAAMC,GACV1B,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,mBACdvB,OAAQqB,EAAMrB,kB,GAlDZwB,IAAMC,YC1MxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.99b984d6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\n//하나의 변수를 받아올때는 {}이것을 무조건 붙여줘야 된다\r\n//이게 없을경우 하나의 오브젝트를 통째로 받아오는데 id이외의 값들은 전부\r\n//없는것으로 판단되어서 오류는 없고 화면에는 아무것도 표시가 안된다\r\nfunction Movie({year, title, summary, poster, genres})\r\n{\r\n    return  (\r\n                <div className=\"movies__movie\">\r\n                    <img className=\"movie__poster\" src={poster} alt={title} title={title}/>\r\n                    <div className=\"movies__data\">\r\n                        {/*이런식으로도 스타일 주기 가능 css사용안함*/}\r\n                        {/* <h3 class=\"movie__title\" style={{backgroundColor:\"red\"}}>{title}</h3> */}\r\n                        <h3 className=\"movie__title\">{title}</h3>\r\n                        <h5 className=\"movie__year\">{title}</h5>\r\n                        <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n                        <ul className=\"movie__genres\">\r\n                            {genres.map((genre, index) => (\r\n                                <li key={index} className=\"genres__genre\">Type{index} : {genre}</li>\r\n                                ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            );\r\n}\r\n\r\nMovie.propTypes =\r\n{\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres : PropTypes.array.isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\n\n//#region FunctionComponent\n\n//import PropTypes from 'prop-types';\n\n// function JMTFood({fav})\n// {\n//   return <h1>I like {fav}</h1>;\n// }\n\n// function AllFood(value)\n// {\n//   return <h1>I like {value.fir}</h1>;\n// }\n\n// const gameILike =\n// [\n//   {\n//     id : 1,\n//     name : \"RockmanZero\",\n//     image : \"https://c2.staticflickr.com/8/7680/27308415125_e2bfdcf45f_o.jpg\",\n//     rating : 5\n//   },\n//   {\n//     id : 2,\n//     name : \"FallOut\",\n//     image : \"https://mblogthumb-phinf.pstatic.net/MjAxNzA4MDhfMTM3/MDAxNTAyMTgzODcxNjM0.JuoFSxZYIzuDQVe6Yqj_vjlfkxrhC9hM3jpLjVQi6Kog.r4V0dtTSESHbdgL-weCt7yWY64HiehuN6WkiNGI9sfEg.PNG.inh710/fallout-4.png?type=w2\",\n//     rating : 4.9\n//   }\n// ];\n\n// function JMTGame({name, picture, rating})\n// {\n//   return (\n//     <div>\n//     <h1>JMT {name}</h1>\n//     <h4>{rating}/5.0</h4>\n//     <img src={picture} alt=\"Description\" width=\"400px\" height=\"200px\" />\n//     </div>\n//   );\n// }\n\n// function RenderGame(pick)\n// {\n//   return (\n//       <JMTGame \n//         key={pick.id} \n//         name={pick.name} \n//         picture={pick.image} \n//         rating={pick.rating}/>\n//   );\n// }\n\n// JMTGame.propTypes =\n// {\n//   name : PropTypes.string.isRequired,\n//   picture : PropTypes.string.isRequired,\n//   rating : PropTypes.number\n// }\n\n// function App()\n// {\n//   return (\n//     <div>\n//       <h1>h1 Test</h1>\n//       {/* 컴포넌트에 prop의 이름을 fav로 주고 치킨이라는 값을 넣음 */}\n//       <JMTFood fav=\"치킨\"></JMTFood>\n//       <AllFood\n//         fir=\"김치\"\n//         sec={true}\n//         tir={[1, 2, 3, 4, true]}\n//       />\n//       {console.log(gameILike.map(RenderGame))}\n//       {gameILike.map(RenderGame)}\n//     </div>\n//   )\n// }\n\n//#endregion\n\n//#region ClassComponent\n\n// class App extends React.Component\n// {\n//   constructor(props)\n//   {\n//     super(props);\n//     console.log(\"constructor\");\n//   }\n\n//   state = \n//   {\n//     count : 0\n//   };\n\n//   Add = () =>\n//   {\n//     this.setState(current => ({count: current.count + 1}));\n//   };\n//   Minus = () =>\n//   {\n//     //이렇게 쓸수 있지만 추천하지 않는다\n//     this.setState({count: this.state.count - 1});\n//   };\n\n//   componentDidMount()\n//   {\n//     console.log(\"componentDidMount\");\n//   }\n\n//   componentDidUpdate()\n//   {\n//     console.log(\"componentDidUpdate\");\n//   }\n\n//   componentWillUnmount()\n//   {\n//     console.log(\"compoentWillUnmount\");\n//   }\n\n//   render()\n//   {\n//     console.log(\"Render\");\n\n//     return (\n//         <div>\n//           <h1>The number is: {this.state.count}</h1>\n//           <button onClick={this.Add}>Add</button>\n//           <button onClick={this.Minus}>Minus</button>\n//         </div>\n//       );\n//   }\n// }\n\n//#endregion\n\n//#region MovieComponent NoneCSS\n\n// import axios from 'axios';\n// import Movie from './Movie';\n\n// class App extends React.Component\n// {\n//   state =\n//   {\n//     isLoading : true,\n//     movies : []\n//   };\n\n//   getMovies = async () =>\n//   {\n//     const\n//     {\n//       data:\n//       {\n//         data: { movies }\n//       }\n//     } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n//     this.setState({ movies, isLoading : false })\n//   }\n\n//   componentDidMount()\n//   {\n//     //시간 지연\n//     // setTimeout(() => {\n//     //   this.setState({isLoading: false});\n//     // }, 6000);\n\n//     this.getMovies();\n//   }\n\n//   render()\n//   {\n//     const { isLoading, movies } = this.state;\n\n//     return (\n//       <div>\n//         {isLoading \n//           ? \"Loading...\" \n//           : movies.map(movie => \n//                                 (\n//                                   <Movie \n//                                       key={movie.id}\n//                                       id={movie.id} \n//                                       year={movie.year} \n//                                       title={movie.title} \n//                                       summary={movie.summary} \n//                                       poster={movie.medium_cover_image}\n//                                   />\n//                                 )\n//                       )\n//         }\n//       </div>\n//     );\n//   }\n// }\n\n//#endregion\n\n//#region MovieComponent CSS\n\nimport axios from 'axios';\nimport Movie from './Movie';\nimport \"./App.css\";\n\nclass App extends React.Component\n{\n  state =\n  {\n    isLoading : true,\n    movies : []\n  };\n\n  getMovies = async () =>\n  {\n    const\n    {\n      data:\n      {\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading : false })\n  }\n\n  componentDidMount()\n  {\n    //시간 지연\n    // setTimeout(() => {\n    //   this.setState({isLoading: false});\n    // }, 6000);\n\n    this.getMovies();\n  }\n\n  render()\n  {\n    const { isLoading, movies } = this.state;\n\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className = \"loader\">\n            <span className = \"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className = \"movies\">\n            {movies.map(movie => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\n//#endregion\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}